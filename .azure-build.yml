queue:
  name: Hosted VS2017
variables:
  buildConfiguration: Release
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
steps:
- task: DotNetCoreInstaller@0
  displayName: 'Use .NET Core sdk 2.1.500'
  inputs:
    version: 2.1.500

- bash: echo NugetVersion is $NugetVersion; export NugetVersion
  displayName: 'export NugetVersion into env vars'
  env:
    NugetVersion: $(NugetVersion)

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: build
    projects: 'NuKeeper.sln'
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: test
    projects: 'NuKeeper.sln'
    arguments: '--configuration $(BuildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura'
    nobuild: true

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines;Cobertura
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage'
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(Build.SourcesDirectory)/CodeCoverage/Cobertura.xml'
    reportDirectory: '$(Build.SourcesDirectory)/CodeCoverage'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop for master'
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)'
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
